function startAutoClicker(){return autoClicker?void console.log("Autoclicker is already running!"):(autoClicker=setInterval(function(){var e=Math.floor(Math.random()*autoClickerVariance*2)-autoClickerVariance,t=clicksPerSecond+e;g_Minigame.m_CurrentScene.m_nClicks=t,debug&&console.log("Clicking "+t+" times this second.")},autoClickerFreq),void console.log("autoClicker has been started."))}function startAutoRespawner(){return autoRespawner?void console.log("autoRespawner is already running!"):(autoRespawner=setInterval(function(){debug&&console.log("Checking if the player is dead."),g_Minigame.m_CurrentScene.m_bIsDead&&(debug&&console.log("Player is dead. Respawning."),RespawnPlayer())},respawnCheckFreq),void console.log("autoRespawner has been started."))}function startAutoTargetSwapper(){return autoTargetSwapper?void console.log("autoTargetSwapper is already running!"):(autoTargetSwapper=setInterval(function(){var e=null,t=!1;g_Minigame.m_CurrentScene.m_rgEnemies.each(function(a){{var o=!1,n=g_Minigame.m_CurrentScene.m_rgLaneData[a.m_nLane].abilities[17];g_Minigame.m_CurrentScene.m_rgLaneData[a.m_nLane].abilities[17]}void 0==e?o=!0:n&&!t?(debug&&console.log("Switching lanes for Raining Gold!"),o=!0):a.m_data.type!=e.m_data.type?(4==a.m_data.type?o=!0:2==a.m_data.type&&3!=e.m_data.type&&0!=e.m_data.type&&(o=!0),3==a.m_data.type&&e.m_data.type<2?o=!0:0==a.m_data.type&&(o=!0),o&&debug&&console.log("Switching to a higher priority mob type.")):e.m_data.hp<a.m_data.hp&&(o=!0,o&&debug&&console.log("Switching to a higher health target.")),o&&(e=a,t=g_Minigame.m_CurrentScene.m_rgLaneData[e.m_nLane].abilities[17])}),void 0!=e&&(g_Minigame.m_CurrentScene.m_rgPlayerData.current_lane!=e.m_nLane&&g_Minigame.CurrentScene().TryChangeLane(e.m_nLane),g_Minigame.CurrentScene().TryChangeTarget(e.m_nID))},targetSwapperFreq),void console.log("autoTargetSwapper has been started."))}function startAutoAbilityUser(){return autoAbilityUser?void console.log("autoAbilityUser is already running!"):(autoAbilityUser=setInterval(function(){debug&&console.log("Checking if it's useful to use an ability.");var e,t=g_Minigame.CurrentScene().m_rgPlayerData.hp/g_Minigame.CurrentScene().m_rgPlayerTechTree.max_hp*100,a=g_Minigame.m_CurrentScene.m_rgEnemies[g_Minigame.m_CurrentScene.m_rgPlayerData.target];a&&(e=a.m_data.hp/a.m_data.max_hp*100),hasAbility(5),hasAbility(6),useMedicsAtPercent>=t&&!g_Minigame.m_CurrentScene.m_bIsDead&&(debug&&console.log("Health below threshold. Need medics!"),hasAbility(7)?(debug&&console.log("Unleash the medics!"),castAbility(7)):debug&&console.log("No medics to unleash!")),void 0!=a&&2==a.m_data.type&&useMetalDetectorOnBossBelowPercent>=e&&hasAbility(8)&&(debug&&console.log("Using Metal Detector."),castAbility(8)),hasAbility(9)&&(debug&&console.log("Decreasing cooldowns."),castAbility(9)),void 0!=a&&0==a.m_data.type&&e>=useNukeOnSpawnerAbovePercent&&hasAbility(10)&&(debug&&console.log("Nuclear launch detected."),castAbility(10)),hasAbility(11),hasAbility(12)},abilityUseCheckFreq),void console.log("autoAbilityUser has been started."))}function startAutoItemUser(){return autoItemUser?void console.log("autoItemUser is already running!"):(autoItemUser=setInterval(function(){debug&&console.log("Checking if it's useful to use an item.")},itemUseCheckFreq),void console.log("autoItemUser has been started."))}function startAllAutos(){startAutoClicker(),startAutoRespawner(),startAutoTargetSwapper(),startAutoAbilityUser(),startAutoItemUser()}function stopAutoClicker(){autoClicker?(clearInterval(autoClicker),autoClicker=null,console.log("autoClicker has been stopped.")):console.log("No autoClicker is running to stop.")}function stopAutoRespawner(){autoRespawner?(clearInterval(autoRespawner),autoRespawner=null,console.log("autoRespawner has been stopped.")):console.log("No autoRespawner is running to stop.")}function stopAutoTargetSwapper(){autoTargetSwapper?(clearInterval(autoTargetSwapper),autoTargetSwapper=null,console.log("autoTargetSwapper has been stopped.")):console.log("No autoTargetSwapper is running to stop.")}function stopAutoAbilityUser(){autoAbilityUser?(clearInterval(autoAbilityUser),autoAbilityUser=null,console.log("autoAbilityUser has been stopped.")):console.log("No autoAbilityUser is running to stop.")}function stopAutoItemUser(){autoItemUser?(clearInterval(autoItemUser),autoItemUser=null,console.log("autoItemUser has been stopped.")):console.log("No autoItemUser is running to stop.")}function stopAllAutos(){stopAutoClicker(),stopAutoRespawner(),stopAutoTargetSwapper(),stopAutoAbilityUser(),stopAutoItemUser()}function disableAutoNukes(){useNukeOnSpawnerAbovePercent=200,console.log("Automatic nukes have been disabled")}function castAbility(e){hasAbility(e)&&g_Minigame.CurrentScene().TryAbility(document.getElementById("ability_"+e).childElements()[0])}function hasAbility(e){return 1<<e&g_Minigame.CurrentScene().m_rgPlayerTechTree.unlocked_abilities_bitfield&&g_Minigame.CurrentScene().GetCooldownForAbility(e)<=0}var debug=!1,clicksPerSecond=30,autoClickerVariance=Math.floor(clicksPerSecond/10),respawnCheckFreq=5e3,targetSwapperFreq=1e3,abilityUseCheckFreq=2e3,itemUseCheckFreq=5e3,useMedicsAtPercent=30,useNukeOnSpawnerAbovePercent=75,useMetalDetectorOnBossBelowPercent=30,autoClickerFreq=1e3,autoRespawner,autoClicker,autoTargetSwapper,autoAbilityUser,autoItemUser;startAllAutos();