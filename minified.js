function startAutoClicker(){return autoClicker?void console.log("Autoclicker is already running!"):(autoClicker=setInterval(function(){var e=Math.floor(Math.random()*autoClickerVariance*2)-autoClickerVariance,t=clicksPerSecond+e;g_Minigame.m_CurrentScene.m_nClicks=t,debug&&console.log("Clicking "+t+" times this second.")},autoClickerFreq),void console.log("autoClicker has been started."))}function startAutoRespawner(){return autoRespawner?void console.log("autoRespawner is already running!"):(autoRespawner=setInterval(function(){debug&&console.log("Checking if the player is dead."),g_Minigame.m_CurrentScene.m_bIsDead&&(debug&&console.log("Player is dead. Respawning."),RespawnPlayer())},respawnCheckFreq),void console.log("autoRespawner has been started."))}function startAutoTargetSwapper(){return autoTargetSwapper?void console.log("autoTargetSwapper is already running!"):(autoTargetSwapper=setInterval(function(){var e=null;g_Minigame.m_CurrentScene.m_rgEnemies.each(function(t){(null==e||compareMobPriority(t,e)>0)&&(e=t)}),null!=e&&e!=g_Minigame.m_CurrentScene.m_rgEnemies[g_Minigame.m_CurrentScene.m_rgPlayerData.target]?(debug&&(console.log("switching targets"),console.log(swapReason)),g_Minigame.m_CurrentScene.m_rgPlayerData.current_lane!=e.m_nLane&&g_Minigame.m_CurrentScene.TryChangeLane(e.m_nLane),g_Minigame.m_CurrentScene.TryChangeTarget(e.m_nID)):null!=e&&e==e&&g_Minigame.m_CurrentScene.m_rgPlayerData.current_lane!=e.m_nLane&&g_Minigame.m_CurrentScene.TryChangeLane(e.m_nLane)},targetSwapperFreq),void console.log("autoTargetSwapper has been started."))}function startAutoAbilityUser(){return autoAbilityUser?void console.log("autoAbilityUser is already running!"):(autoAbilityUser=setInterval(function(){debug&&console.log("Checking if it's useful to use an ability.");var e,t=g_Minigame.CurrentScene().m_rgPlayerData.hp/g_Minigame.CurrentScene().m_rgPlayerTechTree.max_hp*100,a=g_Minigame.m_CurrentScene.m_rgEnemies[g_Minigame.m_CurrentScene.m_rgPlayerData.target];a&&(e=a.m_data.hp/a.m_data.max_hp*100),hasAbility(5),hasAbility(6),useMedicsAtPercent>=t&&!g_Minigame.m_CurrentScene.m_bIsDead&&(debug&&console.log("Health below threshold. Need medics!"),hasAbility(7)?(debug&&console.log("Unleash the medics!"),castAbility(7)):debug&&console.log("No medics to unleash!")),void 0!=a&&2==a.m_data.type&&useMetalDetectorOnBossBelowPercent>=e&&hasAbility(8)&&(debug&&console.log("Using Metal Detector."),castAbility(8)),hasAbility(9)&&!currentLaneHasAbility(9)&&(debug&&console.log("Decreasing cooldowns."),castAbility(9)),void 0!=a&&0==a.m_data.type&&e>=useNukeOnSpawnerAbovePercent&&hasAbility(10)&&(debug&&console.log("Nuclear launch detected."),castAbility(10)),hasAbility(11),hasAbility(12)},abilityUseCheckFreq),void console.log("autoAbilityUser has been started."))}function startAutoItemUser(){return autoItemUser?void console.log("autoItemUser is already running!"):(autoItemUser=setInterval(function(){debug&&console.log("Checking if it's useful to use an item.")},itemUseCheckFreq),void console.log("autoItemUser has been started."))}function startAllAutos(){startAutoClicker(),startAutoRespawner(),startAutoTargetSwapper(),startAutoAbilityUser(),startAutoItemUser()}function stopAutoClicker(){autoClicker?(clearInterval(autoClicker),autoClicker=null,console.log("autoClicker has been stopped.")):console.log("No autoClicker is running to stop.")}function stopAutoRespawner(){autoRespawner?(clearInterval(autoRespawner),autoRespawner=null,console.log("autoRespawner has been stopped.")):console.log("No autoRespawner is running to stop.")}function stopAutoTargetSwapper(){autoTargetSwapper?(clearInterval(autoTargetSwapper),autoTargetSwapper=null,console.log("autoTargetSwapper has been stopped.")):console.log("No autoTargetSwapper is running to stop.")}function stopAutoAbilityUser(){autoAbilityUser?(clearInterval(autoAbilityUser),autoAbilityUser=null,console.log("autoAbilityUser has been stopped.")):console.log("No autoAbilityUser is running to stop.")}function stopAutoItemUser(){autoItemUser?(clearInterval(autoItemUser),autoItemUser=null,console.log("autoItemUser has been stopped.")):console.log("No autoItemUser is running to stop.")}function stopAllAutos(){stopAutoClicker(),stopAutoRespawner(),stopAutoTargetSwapper(),stopAutoAbilityUser(),stopAutoItemUser()}function disableAutoNukes(){useNukeOnSpawnerAbovePercent=200,console.log("Automatic nukes have been disabled")}function castAbility(e){hasAbility(e)&&g_Minigame.CurrentScene().TryAbility(document.getElementById("ability_"+e).childElements()[0])}function currentLaneHasAbility(e){return g_Minigame.m_CurrentScene.m_rgLaneData[g_Minigame.CurrentScene().m_rgPlayerData.current_lane].abilities[e]}function hasAbility(e){return 1<<e&g_Minigame.CurrentScene().m_rgPlayerTechTree.unlocked_abilities_bitfield&&g_Minigame.CurrentScene().GetCooldownForAbility(e)<=0}function getMobTypePriority(e){switch(mobType=e.m_data.type,mobType){case 0:return 0;case 3:return 1;case 2:return 2;case 4:return 3}return-Number.MAX_VALUE}function compareMobPriority(e,t){var a=g_Minigame.CurrentScene().m_rgPlayerData.hp/g_Minigame.CurrentScene().m_rgPlayerTechTree.max_hp*100,n=g_Minigame.m_CurrentScene.m_rgLaneData[e.m_nLane].abilities[7],r=g_Minigame.m_CurrentScene.m_rgLaneData[t.m_nLane].abilities[7],o=g_Minigame.m_CurrentScene.m_rgLaneData[e.m_nLane].abilities[17],i=g_Minigame.m_CurrentScene.m_rgLaneData[t.m_nLane].abilities[17],s=getMobTypePriority(e),l=getMobTypePriority(t),u=userElementMultipliers[g_Minigame.m_CurrentScene.m_rgGameData.lanes[e.m_nLane].element],c=userElementMultipliers[g_Minigame.m_CurrentScene.m_rgGameData.lanes[t.m_nLane].element],g=e.m_data.hp,m=t.m_data.hp;return seekHealingPercent>=a&&!g_Minigame.m_CurrentScene.m_bIsDead&&n!=r?(swapReason="Swapping to lane with active healing.",n?1:-1):o!=i?(swapReason="Switching to target with Raining Gold.",o?1:-1):s!=l?(swapReason="Switching to higher priority target.",s-l):u!=c?(swapReason="Switching to elementally weaker target.",u-c):g!=m?(swapReason="Switching to lower HP target.",g-m):0}var debug=!1,clicksPerSecond=50,autoClickerVariance=Math.floor(clicksPerSecond/10),respawnCheckFreq=5e3,targetSwapperFreq=1e3,abilityUseCheckFreq=2e3,itemUseCheckFreq=5e3,seekHealingPercent=50,useMedicsAtPercent=30,useNukeOnSpawnerAbovePercent=75,useMetalDetectorOnBossBelowPercent=30,autoClickerFreq=1e3,autoRespawner,autoClicker,autoTargetSwapper,autoTargetSwapperElementUpdate,autoAbilityUser,autoItemUser,userElementMultipliers=[1,1,1,1],swapReason;"undefined"!=typeof unsafeWindow&&(unsafeWindow.startAutoClicker=startAutoClicker,unsafeWindow.startAutoRespawner=startAutoRespawner,unsafeWindow.startAutoTargetSwapper=startAutoTargetSwapper,unsafeWindow.startAutoAbilityUser=startAutoAbilityUser,unsafeWindow.startAutoItemUser=startAutoItemUser,unsafeWindow.startAllAutos=startAllAutos,unsafeWindow.stopAutoClicker=stopAutoClicker,unsafeWindow.stopAutoRespawner=stopAutoRespawner,unsafeWindow.stopAutoTargetSwapper=stopAutoTargetSwapper,unsafeWindow.stopAutoAbilityUser=stopAutoAbilityUser,unsafeWindow.stopAutoItemUser=stopAutoItemUser,unsafeWindow.stopAllAutos=stopAllAutos,unsafeWindow.disableAutoNukes=disableAutoNukes,unsafeWindow.castAbility=castAbility,unsafeWindow.hasAbility=hasAbility),startAllAutos();