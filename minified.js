function startAutoClicker(){return autoClicker?void console.log("Autoclicker is already running!"):(autoClicker=setInterval(function(){var e=Math.floor(Math.random()*autoClickerVariance*2)-autoClickerVariance,t=clicksPerSecond+e;g_Minigame.m_CurrentScene.m_nClicks=t,debug&&console.log("clicking "+t+" times this second.")},autoClickerFreq),void console.log("autoClicker has been started."))}function startAutoRespawner(){return autoRespawner?void console.log("autoRespawner is already running!"):(autoRespawner=setInterval(function(){debug&&console.log("Checking if the player is dead."),g_Minigame.m_CurrentScene.m_bIsDead&&(debug&&console.log("Player is dead. Respawning."),RespawnPlayer())},respawnCheckFreq),void console.log("autoRespawner has been started."))}function startAutoTargetSwapper(){return autoTargetSwapper?void console.log("autoTargetSwapper is already running!"):(autoTargetSwapper=setInterval(function(){var e=!1,t=!1,a=-1,o=-1,r=null;g_Minigame.m_CurrentScene.m_rgEnemies.each(function(n){e||(2==n.m_data.type?(e=!0,r=n):a>0&&0==n.m_data.type&&n.m_data.hp<a?(a=n.m_data.hp,r=n):0>a&&0==n.m_data.type?(a=n.m_data.hp,t=!0,r=n):o>0&&!t&&n.m_data.hp<o?(o=n.m_data.hp,r=n):0>o&&!t&&(o=n.m_data.hp,r=n))}),r&&(g_Minigame.m_CurrentScene.m_rgPlayerData.current_lane!=r.m_nLane&&g_Minigame.CurrentScene().TryChangeLane(r.m_nLane),g_Minigame.CurrentScene().TryChangeTarget(r.m_nID))},targetSwapperFreq),void console.log("autoTargetSwapper has been started."))}function startAutoAbilityUser(){return autoAbilityUser?void console.log("autoAbilityUser is already running!"):(autoAbilityUser=setInterval(function(){debug&&console.log("Checking if it's useful to use an ability."),hasAbility(6);var e=g_Minigame.CurrentScene().m_rgPlayerData.hp/g_Minigame.CurrentScene().m_rgPlayerTechTree.max_hp*100;useMedicsAtPercent>=e&&(debug&&console.log("Health below threshold. Need medics!"),hasAbility(7)?(debug&&console.log("Unleash the medics!"),castAbility(7)):debug&&console.log("No medics to unleash!")),hasAbility(8),hasAbility(9);var t=g_Minigame.m_CurrentScene.m_rgEnemies[g_Minigame.m_CurrentScene.m_rgPlayerData.target],a=t.m_data.hp/t.m_data.max_hp*100;0==t.m_data.type&&a>=useNukeOnSpawnerAbovePercent&&hasAbility(10)&&(debug&&console.log("Nuclear launch detected."),castAbility(10))},abilityUseCheckFreq),void console.log("autoAbilityUser has been started."))}function startAutoItemUser(){return autoItemUser?void console.log("autoItemUser is already running!"):(autoItemUser=setInterval(function(){debug&&console.log("Checking if it's useful to use an item.")},itemUseCheckFreq),void console.log("autoItemUser has been started."))}function startAllAutos(){startAutoClicker(),startAutoRespawner(),startAutoTargetSwapper(),startAutoAbilityUser(),startAutoItemUser()}function stopAutoClicker(){autoClicker?(clearInterval(autoClicker),autoClicker=null,console.log("autoClicker has been stopped.")):console.log("No autoClicker is running to stop.")}function stopAutoRespawner(){autoRespawner?(clearInterval(autoRespawner),autoRespawner=null,console.log("autoRespawner has been stopped.")):console.log("No autoRespawner is running to stop.")}function stopAutoTargetSwapper(){autoTargetSwapper?(clearInterval(autoTargetSwapper),autoTargetSwapper=null,console.log("autoTargetSwapper has been stopped.")):console.log("No autoTargetSwapper is running to stop.")}function stopAutoAbilityUser(){autoAbilityUser?(clearInterval(autoAbilityUser),autoAbilityUser=null,console.log("autoAbilityUser has been stopped.")):console.log("No autoAbilityUser is running to stop.")}function stopAutoItemUser(){autoItemUser?(clearInterval(autoItemUser),autoItemUser=null,console.log("autoItemUser has been stopped.")):console.log("No autoItemUser is running to stop.")}function stopAllAutos(){stopAutoClicker(),stopAutoRespawner(),stopAutoTargetSwapper(),stopAutoAbilityUser(),stopAutoItemUser()}function disableAutoNukes(){useNukeOnSpawnerAbovePercent=200}function castAbility(e){hasAbility(e)&&g_Minigame.CurrentScene().TryAbility(document.getElementById("ability_"+e).childElements()[0])}function hasAbility(e){return 1<<e&g_Minigame.CurrentScene().m_rgPlayerTechTree.unlocked_abilities_bitfield&&g_Minigame.CurrentScene().GetCooldownForAbility(e)<=0}var debug=!1,clicksPerSecond=100,autoClickerVariance=Math.floor(clicksPerSecond/10),respawnCheckFreq=5e3,targetSwapperFreq=1e3,abilityUseCheckFreq=2e3,itemUseCheckFreq=5e3,useMedicsAtPercent=30,useNukeOnSpawnerAbovePercent=75,autoClickerFreq=1e3,autoRespawner,autoClicker,autoTargetSwapper,autoAbilityUser,autoItemUser;startAllAutos();